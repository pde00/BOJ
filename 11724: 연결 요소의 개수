#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int N, M;
vector<int> adj[1001], l;
bool visit[1001];
queue<int> q;

void findLink() {
	for (int i = 1; i <= N; i++) {
		if (adj[i].size() == 0) {
			l.push_back(1);
			continue;
		}
		else {
			for (int j = 0; j < adj[i].size(); j++) {
				if (!visit[adj[i][j]]) {
					visit[adj[i][j]] = true;
					q.push(adj[i][j]);
					while (!q.empty()) {
						int fr = q.front();
						q.pop();
						for (int k = 0; k < adj[fr].size(); k++) {
							if (visit[adj[fr][k]]) continue;
							visit[adj[fr][k]] = true;
							q.push(adj[fr][k]);
						}
					}
					l.push_back(1);
				}
			}
		}

	}
}

int main() {
	int a, b;
	cin >> N >> M;
	for (int i = 0; i < M; i++) {
		cin >> a >> b;
		adj[a].push_back(b);
		adj[b].push_back(a);
	}
	findLink();
	cout << l.size() << '\n';
}
