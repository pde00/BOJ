#include <iostream>
#include <vector>
#include <string>
using namespace std;

vector<int> queue; 

void push(int x) {
	queue.push_back(x);
}

void pop() {
	if (queue.size() == 0)
		cout << -1 << '\n';
	else {
		cout << queue.at(0) << '\n';
		queue.erase(queue.begin());
	}
}

void size() {
	cout << queue.size() << '\n';
}

void empty() {
	if (queue.size() == 0)
		cout << 1 << '\n';
	else
		cout << 0<< '\n';
}
void front() {
	if (queue.size() == 0)
		cout << -1 << '\n';
	else
		cout << queue.at(0) << '\n';
}
void back() {
	if (queue.size() == 0)
		cout << -1 << '\n';
	else
		cout << queue.back() << '\n';
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	int N,x;
	string a;
	cin >> N;
	
	while (N--) {
		cin >> a;
		if (a == "push") {
			cin >> x;
			push(x);
		}
		else if (a == "pop") {
			pop();
		}
		else if (a == "size") {
			size();
		}
		else if (a == "empty") {
			empty();
		}
		else if (a == "front") {
			front();
		}
		else
			back();
	}
}

//Not good code, if we use Linked List(list + pointer), We Can make more effective code
//Vector.size() = O(n)
