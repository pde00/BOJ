#include <iostream>
#include <queue>
#include <algorithm>
using namespace std;

class pos{
    public:
        int x,y;
        pos(int ax, int ay): x(ax), y(ay){};
};

queue<pos> q;
int n, m, map[502][502], cnt, maxArea;
int dx[4] = {0,0,-1,1};
int dy[4] = {1,-1,0,0};
bool visit[502][502];

void findArea(){
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            if(!visit[i][j] && map[i][j] == 1){
                cnt++;
                int tempArea = 1;
                visit[i][j] = true;
                q.push(pos(i,j));
                while(!q.empty()){
                    pos p = q.front();
                    q.pop();
                    for(int k = 0; k < 4; k ++){
                        int qx = p.x + dx[k];
                        int qy = p.y + dy[k];

                        if(qx < 1 || qx > n || qy < 1 || qy > m) continue;
                        if(visit[qx][qy]) continue;
                        if(map[qx][qy] == 0) continue;

                        visit[qx][qy] = true;
                        q.push(pos(qx,qy));
                        tempArea++;
                    }
                }
                maxArea = max(maxArea, tempArea);
            }
        }
    }
}

int main(void){
    cin >> n >> m;
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            cin>>map[i][j];
        }
    }
    findArea();
    cout << cnt << '\n' << maxArea << '\n';

}
